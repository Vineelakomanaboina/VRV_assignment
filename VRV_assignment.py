# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tSED6s3Q1qc5rvan5b-ayM__eAGNIHG_
"""

import csv
from collections import defaultdict


FAILED_LOGIN_THRESHOLD = 10


LOG_FILE = "sample.log"
OUTPUT_FILE = "log_analysis_results.csv"


def parse_log_file(log_file):
    """Parse the log file and extract log details."""
    ip_requests = defaultdict(int)
    endpoint_access = defaultdict(int)
    failed_logins = defaultdict(int)

    with open(log_file, "r") as file:
        for line in file:
            parts = line.split()
            if len(parts) < 9:
                continue


            ip_address = parts[0]
            ip_requests[ip_address] += 1


            endpoint = parts[6] if len(parts) > 6 else "unknown"
            endpoint_access[endpoint] += 1


            status_code = parts[8]
            if status_code == "401" or "Invalid credentials" in line:
                failed_logins[ip_address] += 1

    return ip_requests, endpoint_access, failed_logins


def get_most_accessed_endpoint(endpoint_access):
    """Find the most frequently accessed endpoint."""
    if not endpoint_access:
        return None, 0
    endpoint, count = max(endpoint_access.items(), key=lambda x: x[1])
    return endpoint, count


def detect_suspicious_activity(failed_logins, threshold):
    """Identify IPs exceeding the threshold of failed login attempts."""
    return {ip: count for ip, count in failed_logins.items() if count > threshold}


def save_to_csv(ip_requests, most_accessed_endpoint, suspicious_activity, output_file):
    """Save the analysis results to a CSV file."""
    with open(output_file, mode="w", newline="") as file:
        writer = csv.writer(file)


        writer.writerow(["IP Address", "Request Count"])
        for ip, count in sorted(ip_requests.items(), key=lambda x: x[1], reverse=True):
            writer.writerow([ip, count])

        writer.writerow([])

        # Write most accessed endpoint
        writer.writerow(["Most Frequently Accessed Endpoint", "Access Count"])
        writer.writerow([most_accessed_endpoint[0], most_accessed_endpoint[1]])

        writer.writerow([])


        writer.writerow(["IP Address", "Failed Login Count"])
        for ip, count in suspicious_activity.items():
            writer.writerow([ip, count])


def main():

    ip_requests, endpoint_access, failed_logins = parse_log_file(LOG_FILE)


    most_accessed_endpoint = get_most_accessed_endpoint(endpoint_access)


    suspicious_activity = detect_suspicious_activity(failed_logins, FAILED_LOGIN_THRESHOLD)


    print("\nRequests per IP Address:")
    print("IP Address           Request Count")
    for ip, count in sorted(ip_requests.items(), key=lambda x: x[1], reverse=True):
        print(f"{ip:<20} {count}")

    print("\nMost Frequently Accessed Endpoint:")
    print(f"{most_accessed_endpoint[0]} (Accessed {most_accessed_endpoint[1]} times)")

    print("\nSuspicious Activity Detected:")
    print("IP Address           Failed Login Attempts")
    for ip, count in suspicious_activity.items():
        print(f"{ip:<20} {count}")

    save_to_csv(ip_requests, most_accessed_endpoint, suspicious_activity, OUTPUT_FILE)
    print(f"\nResults saved to {OUTPUT_FILE}")


if __name__ == "__main__":
    main()

